@using Microsoft.AspNetCore.Components.Rendering
@namespace Sayeh.AspNetCore.Components
@inherits SayehPropertyColumn<TItem, TValue>
@typeparam TItem where TItem : class
@typeparam TValue  where TValue: struct
@{
    InternalGridContext.Grid.AddColumn(this);
}

@code {

    public void CellEditContent(RenderTreeBuilder __builder)
    {
        if (!InternalIsReadonly)
        {
            @if (typeof(TValue) == typeof(DateTime) || typeof(TValue) == typeof(Nullable<DateTime>) || typeof(TValue) == typeof(DateOnly) || typeof(TValue) == typeof(Nullable<DateOnly>))
            {
                <FluentDatePicker @ref=element @bind-Value=internalValue  />
            }
        }
        else
        {
            CellContent(__builder, Item!);
        }
    }

    protected internal override void CellContent(RenderTreeBuilder builder, TItem item)
    {
        builder.AddContent(10, _cellTextFunc!(item));
    }

}